{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"modules/","title":"Module Documentation","text":"<p>This repository currently contains the following groups of modules:</p> <ol> <li>image processing modules (<code>modules/image_processing</code>)</li> <li>tracking modules (<code>modules/tracking/</code>)</li> <li>graph processing modules (<code>modules/graph_processing</code>)</li> </ol>"},{"location":"modules/#image-processing-modules","title":"Image Processing Modules","text":""},{"location":"modules/#nuclei-segmentation","title":"Nuclei Segmentation","text":"<p>The <code>nuclei_segmentation</code> module provides a process that takes a <code>BaseDataSet</code> instance with confocal microscopy images (RGB)  showing stained nuclei as input. Subsequently, the images are grayscaled and re-scaled to the range <code>[0,1]</code> before nuclei are segmented via stardist.</p> <p>Import the module into your pipeline script via</p> <pre><code>include { nuclei_segmentation } from './cellular-dynamics-nf-modules/modules/image_processing/nuclei_segmentation/main.nf'\n</code></pre> Argument Index Argument Name Argument Type Description 1 tuple(val, path) (<code>basename</code>, <code>fpath</code>) 2 <code>stardist_probability_threshold</code> val Floating point number defining <code>stardist</code> probability threshold. 3 <code>min_nucleus_area_pxsq</code> val Floating point number defining the minimum nucleus area (in \\(px^2\\)!). Segmented objects smaller than this will be removed. 4 <code>parent_dir_out</code> val Directory to which the resulting file will be published."},{"location":"modules/#basic-filter","title":"Basic Filter","text":""},{"location":"modules/#cell-approximation","title":"Cell Approximation","text":""},{"location":"modules/#label-objects","title":"Label Objects","text":""},{"location":"modules/#tracking-modules","title":"Tracking Modules","text":""},{"location":"modules/#annotate-d2_textmin","title":"Annotate \\(D^2_\\text{min}\\)","text":"<p>The <code>annotate_D2min</code> module provides a process that calculates the cell motility measure \\(D_\\text{min}^2\\). This measure quantifies non-affine movements of cells with regard to their neighbors by optimizing the strain tensor \\(\\pmb{E}\\):</p> <p>\\(D^2_{\\text{min}, i} = \\text{min} \\left[\\frac{1}{N} \\sum_{j \\in \\mathcal{N}_i} \\left(\\pmb{r}_{i,j}(t+T) - \\pmb{E}_i \\pmb{r}_{i,j}(t) \\right) \\right]\\)</p> <p>Import the module into your pipeline script via</p> <pre><code>include { annotate_D2min } from './cellular-dynamics-nf-modules/modules/tracking/annotate_D2min/main.nf'\n</code></pre> Argument Index Argument Name Argument Type Description 1 tuple(val, path) (<code>basename</code>, <code>graph_dataset_fpath</code>) 2 <code>delta_t_minutes</code> val Floating point number defining the time (\\(\\Delta t\\)) between two adjacent frames. 3 <code>lag-times_minutes</code> val String of comma-separated lag times (in minutes) the \\(D^2_\\text{min}\\) measure should be calculated for. 4 <code>mum_per_px</code> val Floating point number defining the image resolution in microns per pixel (\\(\\frac{\\mu m}{\\text{px}}\\)) 5 <code>minimum_neighbors</code> val Integer defining the minimum number of successfully tracked neighbors needed for calculating \\(D^2_\\text{min}\\). This should always be <code>2</code> or more. 6 <code>parent_dir_out</code> val Directory to which the resulting file will be published."},{"location":"modules/#annotate-neighbor-retention","title":"Annotate Neighbor Retention","text":""},{"location":"modules/#cell-tracking-overlap-tracking","title":"Cell Tracking (Overlap Tracking)","text":""},{"location":"modules/#assemble-cell-tracks-dataframe","title":"Assemble Cell Tracks DataFrame","text":""},{"location":"modules/#graph-processing-modules","title":"Graph Processing Modules","text":""},{"location":"modules/#structure-abstraction","title":"Structure Abstraction","text":""},{"location":"modules/#build-graphs","title":"Build Graphs","text":""},{"location":"modules/#annotate-graph-theoretical-observables","title":"Annotate Graph Theoretical Observables","text":""}]}